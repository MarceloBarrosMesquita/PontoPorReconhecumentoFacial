{% extends "theme/base.login.twig" %}
{% block JSfiles %}
    {{ parent() }}
    <script src="/assets/plugins/jquery/js/jquery.datatables1.10.19.js"></script>
    <script src="/assets/plugins/jquery/js/dataTables.bootstrap4.min.js"></script>
    <script src="/assets/plugins/bootstrap-wizard/bootstrap.wizard.js" type="text/javascript"></script>
    <script src="/assets/plugins/daterangepicker/daterangepicker.js?v=14"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>
    <script src="{{ base_url() }}/assets/plugins/datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="{{ base_url() }}/assets/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="{{ base_url() }}/assets/plugins/datepicker/locales/bootstrap-datepicker.pt-BR.min.js" charset="UTF-8"></script>
    <script src="/assets/js/local/area_colaborador.js?v=14"></script>
    <!-- CUSTOM JS -->
    <script src="/assets/js/global/utils.js"></script>
    <script src="/assets/js/global/bestflow.js"></script>
    <script src="/assets/face-api/dist/face-api.js"></script>

    <script src="https://cdn.rawgit.com/eduardolundgren/tracking.js/v1.1.3/build/tracking-min.js"></script>
    <script src="https://cdn.rawgit.com/eduardolundgren/tracking.js/v1.1.3/build/data/face-min.js"></script>


    <script>
        let isFaceDetected = true;
        let contadorReconhecimento = 20;
        document.addEventListener("DOMContentLoaded", async function () {
            await loadFaceApiModels();
            if(!localStorage.getItem('atualizado')){
                localStorage.clear();
                    utilsJS.sweetMensagemConfirm('Atualização', 'Existe uma atualização, atualize o sistema.', function () {
                });
                
            }
            utilsJS.loading("Sincronizando as informações.");
            
            const qtdeRegistros = parseInt($("#qtdeRegistros").val());
            
            const webcamVideo = document.getElementById("webcamVideoPonto");
            const webcamCanvas = document.getElementById("webcamCanvasPonto");
            const webcamContext = webcamCanvas.getContext("2d");


            


            const captureWebcamButton = document.getElementById("captureWebcamPonto");
            captureWebcamButton.addEventListener("click", captureWebcam);


            
            const arrayDeObjetos = [];

            if (qtdeRegistros > 0 ) {
                localStorage.setItem('atualizado', 1);
                const promessas = [];
                if(!localStorage.getItem('qtdeRegistrosCache')){
                    localStorage.setItem('qtdeRegistrosCache', qtdeRegistros);
                    for (let i = 0; i < qtdeRegistros; i++) {
                        const imagemBase64_2 = $('input[name="base64Banco[' + i + ']"]').val();
                        const ds_pin = $('input[name="ds_pin[' + i + ']"]').val();
                        const colaborador_pk = $('input[name="colaborador_pk[' + i + ']"]').val();


                        const imagem2 = await faceapi.fetchImage(`data:image/jpeg;base64, ` + imagemBase64_2);
                        const faces2 = await faceapi.detectAllFaces(imagem2).withFaceLandmarks().withFaceDescriptors();
                        
                        if(faces2[0]!=undefined){
                            // Converter o Float32Array em um array comum
                            var arrayComum = Array.from(faces2[0].descriptor);

                            // Serializar o array comum em uma string JSON
                            var arrayString = JSON.stringify(arrayComum);
                            arrayDeObjetos.push({
                                base64: imagemBase64_2,
                                ds_pin: ds_pin,
                                colaborador_pk: colaborador_pk,
                                descritores2:arrayString
                            });
                        }
       
                    }
                    var arrayDeObjetosString = JSON.stringify(arrayDeObjetos);

                    // Armazenando a string JSON no localStorage
                    localStorage.setItem('arrayDeObjetos', arrayDeObjetosString);
            
                }
                else if(localStorage.getItem('qtdeRegistrosCache') != qtdeRegistros){
                    localStorage.clear();
                    localStorage.setItem('qtdeRegistrosCache', qtdeRegistros);
                    for (let i = 0; i < qtdeRegistros; i++) {
                        const imagemBase64_2 = $('input[name="base64Banco[' + i + ']"]').val();
                        const ds_pin = $('input[name="ds_pin[' + i + ']"]').val();
                        const colaborador_pk = $('input[name="colaborador_pk[' + i + ']"]').val();
                    
                        const imagem2 = await faceapi.fetchImage(`data:image/jpeg;base64, ` + imagemBase64_2);
                        const faces2 = await faceapi.detectAllFaces(imagem2).withFaceLandmarks().withFaceDescriptors();

                        
                        if(faces2[0]!=undefined){
                            // Converter o Float32Array em um array comum
                            var arrayComum = Array.from(faces2[0].descriptor);

                            // Serializar o array comum em uma string JSON
                            var arrayString = JSON.stringify(arrayComum);
                            arrayDeObjetos.push({
                                base64: imagemBase64_2,
                                ds_pin: ds_pin,
                                colaborador_pk: colaborador_pk,
                                descritores2:arrayString
                            });
                        }
                    }

                    var arrayDeObjetosString = JSON.stringify(arrayDeObjetos);

                    // Armazenando a string JSON no localStorage
                    localStorage.setItem('arrayDeObjetos', arrayDeObjetosString);
                
                    
                }
            }

            
    
            utilsJS.loaded();

            const webcamTracker = new tracking.ObjectTracker("face");
            webcamTracker.setInitialScale(4);
            webcamTracker.setStepSize(2);
            webcamTracker.setEdgesDensity(0.1);
            tracking.track("#webcamCanvasPonto", webcamTracker);
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(function (stream) {
                        webcamVideo.srcObject = stream;

                        // Configuração do rastreamento facial
                        const tracker = new tracking.ObjectTracker('face');
                        tracker.setInitialScale(4);
                        tracker.setStepSize(2);
                        tracker.setEdgesDensity(0.1);

                        // Inicializa o rastreamento
                        tracking.track('#webcamVideoPonto', tracker, { camera: true });

                        // Captura a foto quando um rosto é detectado

                    })
                    .catch(function (error) {

                        console.error("Erro ao acessar a câmera:", error);
                    });
            }
            else{
                //IOS
                $("#capture_openCamera").css('display','inline');
                //CAMERA MANUAL IOS
                const captureOpenCamera = document.getElementById("capture_openCamera");
                capture_openCamera.addEventListener("click", openCamera);

                async function openCamera() {
                    const cameraInput = document.getElementById('cameraInput');

                    // Trigger click on the hidden camera input
                    cameraInput.click();

                    // Listen for changes on the input (user selects a file or takes a picture)
                    cameraInput.addEventListener('change', handleCameraInputChange);
                }

                function handleCameraInputChange(event) {
                    const fileInput = event.target;

                    // Check if files were selected
                    if (fileInput.files && fileInput.files.length > 0) {
                        const selectedFile = fileInput.files[0];

                        // Use FileReader to read the file as a Blob
                        const reader = new FileReader();

                        reader.onload = function (e) {
                            // 'result' contains the Blob data as a data URL
                            const blobDataUrl = e.target.result;

                            redimensionarImagem(blobDataUrl, 300, 200, function(photoDataUrlRedimensionado) {
                                // Agora, 'photoDataUrlRedimensionado' contém o URL base64 da imagem redimensionada

                                // Aqui você pode prosseguir para salvar no banco de dados, comparar com outras imagens ou realizar outras operações.

                                handleClick(photoDataUrlRedimensionado,2);
                            });

                            // Reset the input to allow selecting the same file again
                            fileInput.value = null;
                        };

                        // Read the file as a data URL
                        reader.readAsDataURL(selectedFile);
                    }
                }
            }



            async function loadFaceApiModels() {
                await faceapi.nets.tinyFaceDetector.loadFromUri('https://webponto.gepros6.com.br/weights/');
                await faceapi.nets.faceLandmark68Net.loadFromUri('https://webponto.gepros6.com.br/weights/');
                await faceapi.nets.faceRecognitionNet.loadFromUri('https://webponto.gepros6.com.br/weights/');
                await faceapi.nets.ssdMobilenetv1.loadFromUri('https://webponto.gepros6.com.br/weights/');
            }



            async function loadImageFromBase64(base64String) {
                return await faceapi.fetchImage(`data:image/jpeg;base64, ${base64String}`);
            }

            async function captureWebcam() {
                webcamContext.drawImage(webcamVideo, 0, 0, webcamCanvas.width, webcamCanvas.height);
                const photoDataUrl = webcamCanvas.toDataURL("image/png");

                redimensionarImagem(photoDataUrl, 300, 200, function(photoDataUrlRedimensionado) {
                    // Agora, 'photoDataUrlRedimensionado' contém o URL base64 da imagem redimensionada

                    // Aqui você pode prosseguir para salvar no banco de dados, comparar com outras imagens ou realizar outras operações.

                    handleClick(photoDataUrlRedimensionado,1);
                    //console.log("Imagem redimensionada:", photoDataUrlRedimensionado);
                });
            }

            function handleClick(photoDataUrl,tipo) {
                utilsJS.sweetMensagemConfirm('Permissão', 'Deseja proceguir com o batimento do ponto ?', function () {
                    const [extension, imageBase64] = photoDataUrl.split(',');
                    
                    setInterval(function() {
                            contadorReconhecimento--;

                            if (contadorReconhecimento > 0){
                                utilsJS.loading("Comparando seu rosto. tempo limite "+contadorReconhecimento+". ");
                                return false;
                            }
                            else{
                                utilsJS.loaded();
                                return false;
                            }

                    }, 1000);
                    compararImagens(imageBase64,tipo);
                    
                });
            }

            const targetLength = 128; // Escolha o comprimento desejado para os vetores
            function interpolateVectors(vector1, vector2, targetLength) {

                const length1 = vector1.length;
                const length2 = vector2.length;
                // Interpolar ambos os vetores para o mesmo comprimento
                const interpolatedVector1 = interpolate(vector1, targetLength);
                const interpolatedVector2 = interpolate(vector2, targetLength);

                return [interpolatedVector1, interpolatedVector2];
            }

            // Função de interpolação
            function interpolate(vector, targetLength) {
                const originalLength = vector.length;

                if (originalLength === targetLength) {
                    return vector; // Nenhum ajuste necessário
                }

                const step = originalLength / targetLength;
                const result = [];

                for (let i = 0; i < targetLength; i++) {
                    const index = Math.floor(i * step);
                    result.push(vector[index]);
                }

                return result;
            }
            async function compararImagens(imageBase64,operacional) {
                //operacional = 1 É ANDROID E WEB NORMAL.
                //operacional = 2 É IOS
                const imagem1 = await loadImageFromBase64(imageBase64);
                const faces1 = await faceapi.detectAllFaces(imagem1).withFaceLandmarks().withFaceDescriptors();
                const descritores1 = (faces1[0].descriptor);
               
                var consulta = 0;
                let continuarExecucao = true;
                var distancia = 0;

                var dadosArmazenados = localStorage.getItem('arrayDeObjetos');

                // Converter de volta para um array de objetos JavaScript
                var arrayDeObjetos = JSON.parse(dadosArmazenados);
                
                // Reload datable
                if (arrayDeObjetos.length > 0) {
                    let menorValor = 1;
                    var arrDados = [];
                    for (i = 0; i < arrayDeObjetos.length; i++) {
                        const faces2 = (arrayDeObjetos[i]['face2']);
                        const returnDescriptor = JSON.parse(arrayDeObjetos[i]['descritores2']);
                        const descritores2 = new Float32Array(returnDescriptor);
                        if(operacional == 1){
                            const [interpolatedDescritores1, interpolatedDescritores2] = interpolateVectors(descritores1, descritores2, targetLength);

                            // Interpolar os vetores para o mesmo comprimento

                            distancia = faceapi.euclideanDistance(interpolatedDescritores1, interpolatedDescritores2);
                            // Comparar os descritores faciais e calcular a distância euclidiana

                        }
                        else{
                            //AQUI É IOS
                            distancia = faceapi.euclideanDistance(descritores1, descritores2);

                            // Comparar os descritores faciais e calcular a distância euclidiana
                        }
                        

                        const array = [distancia];

                        // Inicializa a variável para armazenar o menor valor com o primeiro elemento do array
                        

                        // Percorre o array
                        // Verifica se o elemento atual é menor do que o menor valor atual
                        if (distancia < menorValor) {
                            arrDados = []
                            // Se for, atualiza o menor valor
                            menorValor = distancia;
                            arrDados = arrayDeObjetos[i];
                        }
                    }
                        
                    if (menorValor < 0.55) {
                        utilsJS.toastNotify(true, "Localizamos suas informações, redirecionando para bater ponto.");
                        utilsJS.loaded();
                        consulta = 1;
                        contadorReconhecimento = 0;

                        formdataPonto.append("id_empresa", arrDados['ds_pin']);
                        formdataPonto.append("id_colaborador", arrDados['colaborador_pk']);
                        //formdataPonto.append("base64",imageBase64);

                        $.ajax({
                            type: 'POST',
                            url: '/api/area_colaborador/pegarInfoColaborador',
                            data: formdataPonto,
                            processData: false,
                            contentType: false,
                            complete: function (response) {
                                try {
                                    var log = JSON.parse(response.responseText);
                                    if (log.status == true) {
                                        //PARTE PARA BATER O PONTO
                                        $("#segundo_balao").css('display', 'inline');
                                        $("#bater_ponto").css('display', 'inline');

                                        //DADOS BASE64 INPUT TYPE HIDDEN

                                        $("#base64Foto").val(imageBase64);
                                        $("#ds_pin_ponto").val(log.data.arrColaborador['ds_pin']);
                                        $("#id_colaborador_ponto").val(log.data.arrColaborador['colaborador_pk']);
                                        //DADOS COLABORADOR
                                        $("#txt_colaborador_pk").text(log.data.arrColaborador['colaborador_pk']);
                                        $("#txt_pin").text(log.data.arrColaborador['ds_pin']);
                                        $("#txt_ds_colaborador").text(log.data.arrColaborador['ds_colaborador']);
                                        $("#txt_ds_rg").text(log.data.arrColaborador['ds_rg']);
                                        $("#txt_ds_cpf").text(log.data.arrColaborador['ds_cpf']);
                                        $("#txt_ds_razao_social").text(log.data.arrColaborador['ds_razao_social']);
                                        $("#txt_ds_cnpj").text(log.data.arrColaborador['ds_cpf_cnpj']);

                                        //DADOS PARA MONTAR COMBO LEAD
                                        var html = "<option value=''>Selecione um Posto de Trabalho</option>";
                                        $.each(log.data.arrLead, function (k, v) {
                                            html += "<option value='" + v['leads_pk'] + "'>" + v['ds_lead'] + "</option>";
                                        });
                                        $("select[name=leads_pk]").html(html);

                                        //EXIBIR AS OPÇÕES DE PONTO 
                                        calcularHorario(log.data.arrLead[0]['hr_inicio_expediente']);

                                        let arrPonto = log.data.arrPonto;
                                        let contador = 0;
                                        //VERIFICA SE BATEU O PONTO HOJE 
                                        for(i=0;i<arrPonto.length;i++){
                                        
                                            if(arrPonto[i]['tipo_ponto_pk']==1){
                                                $(".exibir_ponto_entrada").css('display', 'none');
                                                contador+=1;
                                            }
                                            else if(arrPonto[i]['tipo_ponto_pk']==2){
                                                $(".exibir_ponto_saida").css('display', 'none');
                                                contador+=1;
                                            }
                                            else if(arrPonto[i]['tipo_ponto_pk']==3){
                                                $(".exibir_ponto_saida_intervalo").css('display', 'none');
                                                contador+=1;
                                            }
                                            else if(arrPonto[i]['tipo_ponto_pk']==4){
                                                $(".exibir_ponto_retorno_intervalo").css('display', 'none');
                                                contador+=1;
                                            }
                                        }

                                        if(contador==4){
                                            $(".exibir_aviso").css('display', 'inline');
                                            
                                        }


                                        //PARTE DA CAPTURA DA FOTO HTML
                                        $("#primeiro_balao").css('display', 'none');
                                        $("#capturar_foto").css('display', 'none');
                                        $("#capture_openCamera").css('display','none');
                                    } else {
                                        utilsJS.toastNotify(false, log.message);
                                        setTimeout(function () {
                                            sendPost("area_colaborador", "receptivo", {});
                                        }, 2000);
                                    }

                                } catch (e) {
                                    utilsJS.toastNotify(false, 'Falhou a requisição para salvar o registro');
                                    utilsJS.loaded();
                                }
                            }
                        });
                    }
                }
                else {
                    utilsJS.toastNotify(false, "Não existe colaborador liberado para barter ponto.");
                    utilsJS.loaded();
                    contadorReconhecimento = 0;

                    $("#base64Foto").val(imageBase64);
                    $("#capturar_foto").css('display', 'none');
                    $("#capture_openCamera").css('display','none');
                    $("#primeiro_balao").css('display', 'none');
                    $("#segundo_balao").css('display', 'none');
                    $("#terceiro_balao").css('display', 'inline');
                    $("#exibir_ponto_manual").css('display','inline');
                    return false;

                }
                if (consulta == 0) {
                    utilsJS.toastNotify(false, "Não encontramos seus dados. Por favor preencher com Empresa e colaborador!");
                    utilsJS.loaded();
                     contadorReconhecimento = 0;
                    //DADOS BASE64 INPUT TYPE HIDDEN

                    $("#base64Foto").val(imageBase64);
                    $("#capturar_foto").css('display', 'none');
                    $("#capture_openCamera").css('display','none');
                    $("#primeiro_balao").css('display', 'none');
                    $("#segundo_balao").css('display', 'none');
                    $("#terceiro_balao").css('display', 'inline');
                    $("#exibir_ponto_manual").css('display','inline');



                    /*setTimeout(function () {
                        sendPost("area_colaborador", "receptivo", {});
                    }, 2000);*/
                    return false;
                }
                //APÓS OS 30 SEGUNDOS DE EXECUÇÃO E NÃO OBTIVER SUCESSO
                setTimeout(function () {
                    if (consulta == 0) {
                        continuarExecucao = false;
                        utilsJS.toastNotify(false, "Não encontramos seus dados. Por favor preencher com Empresa e colaborador!");
                        utilsJS.loaded();
                        //DADOS BASE64 INPUT TYPE HIDDEN

                        $("#base64Foto").val(imageBase64);
                        $("#capturar_foto").css('display', 'none');
                        $("#capture_openCamera").css('display','none');
                        $("#primeiro_balao").css('display', 'none');
                        $("#segundo_balao").css('display', 'none');
                        $("#terceiro_balao").css('display', 'inline');
                        $("#exibir_ponto_manual").css('display','inline');
                    }
                }, 30000);
            }

            async function calcularHorario(specificTimeString){
            // String com o horário específico no formato "HH:MM:SS"
            //let specificTimeString = "10:00:00";

            // Obter a data e hora atual
            let now = new Date();

            // Dividir a string em horas, minutos e segundos
            let timeParts = specificTimeString.split(':');
            let specificHours = parseInt(timeParts[0], 10);
            let specificMinutes = parseInt(timeParts[1], 10);
            let specificSeconds = parseInt(timeParts[2], 10);

            // Criar um objeto Date para o horário específico na data de hoje
            let specificTime = new Date();
            specificTime.setHours(specificHours, specificMinutes, specificSeconds, 0);

            // Calcular a diferença em milissegundos
            let differenceInMilliseconds = now - specificTime;

            // Converter a diferença em um formato mais legível
            let differenceInSeconds = Math.floor(Math.abs(differenceInMilliseconds) / 1000);
            let differenceInMinutes = Math.floor(differenceInSeconds / 60);
            let differenceInHours = Math.floor(differenceInMinutes / 60);
            differenceInSeconds = differenceInSeconds % 60;
            differenceInMinutes = differenceInMinutes % 60;

            // Se a diferença for negativa, o horário específico é no futuro
            let isFuture = differenceInMilliseconds < 0;

            $(".mostrar_opc_ponto").css('display', 'none');

            if (isFuture) {
                if(differenceInHours==0){
                    if(differenceInMinutes<=3){
                        $(".mostrar_opc_ponto").css('display', 'inline');
                        $(".exibir_pulsing").css('display', 'none');
                    }
                    else{
                        $(".text").text("Aguardando para bater o ponto.");
                    }
                }
                else{
                    $(".text").text("Aguardando para bater o ponto.");
                }
                console.log(`Faltam: ${differenceInHours} horas, ${differenceInMinutes} minutos, ${differenceInSeconds} segundos para 10:00:00.`);
            } else {
                
                $(".mostrar_opc_ponto").css('display', 'inline');
                $(".exibir_pulsing").css('display', 'none');
                console.log(`Passaram: ${differenceInHours} horas, ${differenceInMinutes} minutos, ${differenceInSeconds} segundos desde 10:00:00.`);
            }
        }
        });

         //PEGAR LOCALIZAÇÃO ATUAL
        function mostrarLocalizacao(position) {
            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;

            // Monta a URL para fazer a solicitação à API do OpenStreetMap Nominatim
                var url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`;

                // Faz a solicitação à API
                fetch(url)
                .then(response => response.json())
                .then(data => {
                    // Verifica se a solicitação foi bem-sucedida e se há dados de endereço
                    if (data && data.address) {
                        var endereco = data.display_name;
                        $("#ds_localizacao").val(endereco);
                    }
                })
                .catch(error => {
                    console.error('Erro ao buscar o endereço:', error);
                });
            //var localizacao = document.getElementById('localizacao');
            //localizacao.innerHTML = 'Latitude: ' + latitude + '<br>Longitude: ' + longitude;
            }

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(mostrarLocalizacao);
            } else {
                document.getElementById('localizacao').innerHTML = 'Geolocalização não é suportada neste navegador.';
            }




    </script>
{% endblock %}
{% block title %}
    Bater Ponto
{% endblock %}
{% block CSSfiles %}
    {{ parent() }}
    <link rel="preload" href="/assets/img/logo/logo-white.png" as="image">
    <link rel="stylesheet" href="/assets/plugins/preloader/preloader.css">

    <!-- FONTS  -->
    <link rel="stylesheet" href="/assets/fonts/Poppins/poppins.css">

    <!-- GLOBAL CSS -->
    <link rel="stylesheet" href="/assets/plugins/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/assets/plugins/muze-template/app.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css">
    <link href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css" rel="stylesheet" />
    <link href='{{ base_url() }}/assets/plugins/datepicker/css/bootstrap-datepicker.min.css' rel='stylesheet'>
    <link href='{{ base_url() }}/assets/plugins/bootstrap/css/dataTables.bootstrap4.min.css' rel='stylesheet' type='text/css'>
    <link href="/assets/plugins/bootstrap-wizard/bootstrap.wizard.css" rel="stylesheet" type="text/css">
    <link href='/assets/plugins/daterangepicker/daterangepicker.css?v={{ JSversion }}' rel='stylesheet' type='text/css'>
    <style>
        video {
            width: 100%;
            max-width: 600px;
        }
        #overflowTest {
            background: #cccccc;
            border-radius: 20px;
            color: black;
            padding: 20px;
            width: 80%;
            height: 100px;
            overflow-y: scroll;
            border: 1px solid #ccc;
        }
        .balao{background:#cccccc; font-size: 10px; padding:20px; position:relative; top:20px; left:20px; width:100%; float:right;  }
        .balao:before{ content:''; position: absolute; width:20px; height:20px; left:-10px; top:25px; background:#cccccc; -webkit-transform:rotate(45deg); }
    
        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            50% {
                transform: scale(1.1);
                opacity: 0.7;
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .pulsing-text {
            font-size: 2em;
            color: #ff0000;
            text-align: center;
            margin-top: 20%;
            animation: pulse 1s infinite;
        }

        .container-box {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            background-color:#125666,
            width: 350px; /* Largura do quadrado */
            height: 300px; /* Altura do quadrado */
            border: 2px solid black;
        }
        .box {
            display: flex;
            align-items: center;
            justify-content: center;
            border: 1px solid black;
            font-size: 24px;
            font-weight: bold;
        }
    </style>
{% endblock %}
{% block content %}
    <main class="content_wrapper" >
        <div class="container">
            <div class="container col-md-12">
                <div class="row">
                    <div class="col-md-8">
                        &nbsp;
                    </div>
                </div>
                <div class="row ">
                    <div  tabindex="-1" role="dialog" aria-labelledby="modal-set-ramalLabel" >
                        <div class="col-lg" style="max-width:1245px;margin-left: auto;margin-right: auto;background-color: #F7F7F7;">
                            <div class="shadow-lg bg-white rounded mb-12" style="padding: 15px;background-color: #F7F7F7">
                                <div class="card-body" style="text-align: center">
                                    <div class='row'>
                                        <div class='col-md-2'>
                                        </div>
                                        <div class='col-md-8'>
                                            <img width="200px" src="https://gepros.com.br/comercial/condominios/img/nlogo.png" >
                                        </div>
                                    </div>
                                    <!----PEGA TODOS OS BASE64---->
                                    <input type="hidden" id="qtdeRegistros" value="{{ arrDadosBase64|length }}">
                                    {% set looping = 0 %}
                                    {% for itens in arrDadosBase64 %}
                                        <input type="hidden" name="base64Banco[{{ looping }}]" value="{{ itens.img_colaborador_cadastro }}">
                                        <input type="hidden" name="ds_pin[{{ looping }}]" value="{{ itens.ds_pin }}">
                                        <input type="hidden" name="colaborador_pk[{{ looping }}]" value="{{ itens.colaborador_pk }}">
                                        {%set looping =  looping + 1%}
                                    {% endfor %}
                                    <!-------------------------->
                                    <div class="row">
                                        <div class="col-md-2">
                                            &nbsp;
                                        </div>
                                        <div class="col-md-8" >
                                            <h6 style="color:#ff9a66 ">Identificação por facial</h6>
                                        </div>
                                    </div>
                                    <div class="col-md-10">
                                        <div class="contato-itens row">
                                            <div class="col-4">
                                                <img alt="" src="/assets/img/passos.png" style="width: 80px;text-align: center">
                                            </div>
                                            <div class="col-8">
                                                <div class="balao" id="primeiro_balao"><b>Posicione seu rosto no quadro abaixo.</b> </div>
                                                <div class="balao" id="segundo_balao" style="display: none"><b>Agora Basta Selecionar seu ponto.</b> </div>
                                                <div class="balao" id="terceiro_balao" style="display: none"><b>Preencha manualmente seus dados!.</b> </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="capturar_foto">
                                        <div class="col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-md-2">

                                                </div>
                                                <div class="col-md-8">
                                                    <button  style="width:70%;background-color: #14074f;color: #ff9a66" class="btn" id="captureWebcamPonto">Capturar Rosto da Webcam</button><br>
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <input type="file" accept="image/*" capture="camera" id="cameraInput" style="display: none;">

                                        <button id="capture_openCamera" style="display: none">Abrir Camera</button>
                                        <div class="row">

                                            <div class="col-md-12">
                                                <video id="webcamVideoPonto" style="width: 50px;height: 300px;background-color: white;" autoplay playsinline></video>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <canvas id="webcamCanvasPonto" style="width: 550px;height: 450px;display: none"></canvas>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-4">
                                                </div>
                                                <div class="col-7" style="text-align: center">
                                                </div>
                                                <div class="col-1">
                                                
                                                    <i class="bi bi-house" style="cursor:pointer;font-size: 45px;color: #ff9a66;align:center" id="inicio"></i><br>
                                                    <span style="cursor:pointer;font-size: 12px;color: #14074f;text-align:center"><b>Tela de  inicio</b></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="exibir_ponto_manual" style="display: none">
                                        <br>
                                        <div class="col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-3">

                                                </div>
                                                <div class="col-8">
                                                    <input type="hidden" style="border-color:black" class='form-control form-control-sm' id="id_empresa_manual" placeholder="ID Empresa">
                                                    <input type="text" style="border-color:black" class='form-control form-control-sm' id="id_colaborador_manual" placeholder="ID Colaborador">
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-4">

                                                </div>
                                                <div class="col-6">
                                                    <button  style="background-color: #14074f;color: #ff9a66" type="button" class="btn" id="buscarColaboradorPontoManual" onclick="buscarColaboradorPontoManual()"><b>Buscar</b></button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="bater_ponto" style="display: none">
                                        <div class="row">
                                            <div class="col-md-3">
                                                <input type="hidden" id="base64Foto">
                                                <input type="hidden" id="ds_pin_ponto">
                                                <input type="hidden" id="id_colaborador_ponto">
                                                <input type="hidden" id="ds_localizacao">
                                            </div>
                                            <div class="col-md-8">
                                                <div id="overflowTest" style="text-align: left">
                                                        <span>
                                                            <b>
                                                                <font color="#14074f"><b>ID:</b></font><span id="txt_colaborador_pk"></span><br>
                                                                <font color="#14074f"><b>Pin:</b></font> <span id="txt_pin"></span><br>
                                                                <font color="#14074f"><b>Nome:</b></font> <span id="txt_ds_colaborador"></span><br>
                                                                <font color="#14074f"><b>RG:</b></font> <span id="txt_ds_rg"></span><br>
                                                                <font color="#14074f"><b>CPF:</b></font> <span id="txt_ds_cpf"></span><br>
                                                                <font color="#14074f"><b>Razão Social:</b></font> <span id="txt_ds_razao_social"></span><br>
                                                                <font color="#14074f"><b>CNPJ:</b></font> <span id="txt_ds_cnpj"></span><br>
                                                            </b>
                                                        </span>
                                                </div>
                                            </div>
                                        </div>
                                        <br>
                                        <div class="row">
                                            <div class="col-md-4">

                                            </div>
                                            <div class="col-md-5">
                                                <select style="width:100%;background-color: #14074f;color: #ff9a66" class="form-control form-control-lg" name="leads_pk" id="leads_pk"></select>
                                            </div>
                                        </div>
                                        <div class="col-md-12 exibir_aviso" style="display:none">
                                            <h1 class="pulsing-text">Você já bateu todos os pontos hoje !!!</h1>
                                        </div>
                                        <div class="col-md-12 exibir_pulsing" style="display:inline">
                                            <h1 class="pulsing-text"><span class="text"></span></h1>
                                        </div>
                                        <br>
                                        <div class="mostrar_opc_ponto col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-4">
                                                </div>
                                                <div class="col-7">
                                                    <div class="container-box" >
                                                        <div class="box box1">
                                                            <div class="exibir_ponto_entrada">
                                                                <i class="bi bi-smartwatch" style="cursor:pointer;font-size: 45px;color: #ff9a66" onclick="fcSalvarPonto(1)"></i><br>
                                                                <span style="cursor:pointer;font-size: 12px;color: #14074f;"><b>Entrada Expediente</b></span>
                                                            </div>
                                                        </div>
                                                        <div class="box box2">
                                                            <div class="exibir_ponto_saida_intervalo">
                                                                <i class="bi bi-clock-history" style="cursor:pointer;font-size: 45px;color: #ff9a66" onclick="fcSalvarPonto(3)"></i><br>
                                                                <span style="cursor:pointer;font-size: 12px;color: #14074f;"><b>Saida Intervalo</b></span>
                                                            </div>
                                                        </div>
                                                        <div class="box box3">
                                                            <div class="exibir_ponto_retorno_intervalo" style="text-align: center">
                                                                <i class="bi bi-arrow-counterclockwise" style="cursor:pointer;font-size: 45px;color: #ff9a66" onclick="fcSalvarPonto(4)"></i><br>
                                                                <span style="text-align: right;cursor:pointer;font-size: 12px;color: #14074f;"><b>Retorno Intervalo</b></span>
                                                            </div>
                                                        </div>
                                                        <div class="box box4">
                                                            <div class="exibir_ponto_saida" style="text-align: center">
                                                                <i class="bi bi-box-arrow-in-down" style="cursor:pointer;font-size: 45px;color: #ff9a66" onclick="fcSalvarPonto(2)"></i><br>
                                                                <span style="text-align: right;cursor:pointer;font-size: 12px;color: #14074f;"><b>Saida Expediente</b></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-1" style="text-align: center">
                                                    &nbsp;
                                                </div>
                                                
                                            </div>
                                        </div>                                          
                                        <div class="col-md-12">
                                            <div class="contato-itens row">
                                                <div class="col-4">
                                                </div>
                                                <div class="col-7">
                                                </div>
                                                <div class="col-1" style="text-align: center">
                                                    <i class="bi bi-house" style="cursor:pointer;font-size: 45px;color: #ff9a66" id="inicio"></i><br>
                                                    <span style="cursor:pointer;font-size: 12px;color: #14074f;"><b>Tela de  inicio</b></span>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <br>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
{% endblock %}